set-option -g default-shell $SHELL
set-option -g allow-rename off
set -g default-terminal "screen-256color"

# Status bar
set -g status-bg white
set -g status-fg black
set -g base-index 1

# mouse
set -g mouse on

set -g prefix C-w

set-option -gw xterm-keys on

# Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key c neww -c '#{pane_current_path}'

bind-key % split -v -c '#{pane_current_path}'
bind-key '"' split -h -c '#{pane_current_path}'
bind-key v split -h -c '#{pane_current_path}'
bind-key h split -v -c '#{pane_current_path}'

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy 'v' begin-selection

bind C-v paste-buffer

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf' 'source ~/.tmux-linux.conf'

